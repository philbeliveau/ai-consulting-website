'use client';

import React from 'react';
import { motion } from 'framer-motion';
import { Shield, Users, Code, TestTube, CheckCircle, AlertTriangle, Zap } from 'lucide-react';

const TechnicalCaseStudies: React.FC = () => {
  const caseStudy = {
    title: "Cas d'Usage : Pr√©occupations de S√©curit√©",
    subtitle: "Comment les agents IA r√©pondent aux d√©fis de s√©curit√© avec un cycle constant",
    scenario: "Thomas a soulign√© les pr√©occupations de s√©curit√© (par exemple, les d√©bordements de tampon) que les outils d'IA pourraient manquer sans une invitation appropri√©e concernant les exigences d'architecture et de s√©curit√©",
    solution: "Plusieurs agents d'IA sp√©cialis√©s travaillant en collaboration (pour le codage, les tests de s√©curit√©, etc.) pourraient am√©liorer consid√©rablement les flux de travail de d√©veloppement",
    environment: "Les environnements bas√©s sur des conteneurs aident √† rationaliser le d√©veloppement en standardisant les exigences d'architecture"
  };

  const agentCycle = [
    {
      phase: "D√©veloppement",
      agent: "Coding Agent",
      color: "text-black",
      bgColor: "gray-100",
      borderColor: "gray-300",
      description: "G√©n√®re le code initial",
      actions: [
        "√âcrit le code selon les sp√©cifications",
        "Applique les patterns de s√©curit√© connus",
        "Utilise les meilleures pratiques du langage"
      ],
      concerns: ["D√©bordements de tampon potentiels", "Validation d'entr√©e insuffisante"]
    },
    {
      phase: "Test S√©curit√©",
      agent: "Security Agent",
      color: "text-primary-blue",
      bgColor: "primary-blue/10",
      borderColor: "primary-blue/30",
      description: "Analyse les vuln√©rabilit√©s",
      actions: [
        "Scanne les vuln√©rabilit√©s OWASP",
        "D√©tecte les d√©bordements de tampon",
        "Valide la gestion des entr√©es utilisateur"
      ],
      concerns: ["CVE d√©tect√©es", "Patterns dangereux identifi√©s"]
    },
    {
      phase: "Alignement",
      agent: "Alignment Agent",
      color: "text-accent-red",
      bgColor: "accent-red/10",
      borderColor: "accent-red/30",
      description: "V√©rifie les exigences",
      actions: [
        "Compare avec les exigences de s√©curit√©",
        "Valide l'alignement architectural", 
        "Confirme les standards entreprise"
      ],
      concerns: ["Non-conformit√© aux standards", "Exigences manquantes"]
    },
    {
      phase: "Enforcement",
      agent: "Quality Agent", 
      color: "text-success-green",
      bgColor: "success-green/10",
      borderColor: "success-green/30",
      description: "Applique les corrections",
      actions: [
        "Corrige les vuln√©rabilit√©s d√©tect√©es",
        "Met √† jour la documentation",
        "Optimise le code s√©curis√©"
      ],
      concerns: ["Corrections appliqu√©es", "Standards respect√©s"]
    },
    {
      phase: "V√©rification",
      agent: "Sub-Agent Verifier",
      color: "text-hover-interactive",
      bgColor: "hover-interactive/10",
      borderColor: "hover-interactive/30",
      description: "V√©rifie le code g√©n√©r√©",
      actions: [
        "Tests de s√©curit√© automatis√©s",
        "M√©triques de qualit√©",
        "Validation continue"
      ],
      concerns: ["Code v√©rifi√© et s√©curis√©", "Pr√™t pour la production"]
    }
  ];

  return (
    <section className="py-24 bg-background-dark">
      <div className="max-w-7xl mx-auto px-6">
        {/* Header */}
        <motion.div
          className="text-center mb-16"
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
        >
          <h2 className="text-h1 font-bold mb-6 text-text-primary">
            Cas d'Usage Techniques
          </h2>
          <p className="text-xl text-text-secondary max-w-4xl mx-auto leading-relaxed">
            Comment nos agents IA collaboratifs g√®rent les pr√©occupations de s√©curit√©
            <span className="text-primary-blue font-semibold block mt-2">
              avec un cycle constant de d√©veloppement, test, alignement et v√©rification.
            </span>
          </p>
        </motion.div>

        {/* Case Study Context */}
        <motion.div
          className="mb-16"
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.2 }}
          viewport={{ once: true }}
        >
          <div className="bg-gradient-to-r from-warning-orange/10 to-accent-red/10 border border-warning-orange/20 rounded-2xl p-6">
            <div className="text-center mb-6">
              <div className="inline-flex items-center gap-3 mb-3">
                <Shield className="w-6 h-6 text-warning-orange" />
                <h3 className="text-xl font-bold text-warning-orange">
                  Cas d'Usage S√©curit√©
                </h3>
              </div>
              <p className="text-text-primary text-base max-w-2xl mx-auto">
                Comment nos agents IA collaboratifs d√©tectent et corrigent les vuln√©rabilit√©s automatiquement
              </p>
            </div>
            
            <div className="grid md:grid-cols-3 gap-4">
              <div className="text-center p-4">
                <div className="w-12 h-12 bg-accent-red/20 rounded-full flex items-center justify-center mx-auto mb-3">
                  <AlertTriangle className="w-6 h-6 text-accent-red" />
                </div>
                <h4 className="text-accent-red font-semibold mb-2">Probl√®me</h4>
                <p className="text-text-secondary text-sm leading-relaxed">
                  D√©bordements de tampon et failles de s√©curit√© non d√©tect√©es
                </p>
              </div>
              
              <div className="text-center p-4">
                <div className="w-12 h-12 bg-success-green/20 rounded-full flex items-center justify-center mx-auto mb-3">
                  <Users className="w-6 h-6 text-success-green" />
                </div>
                <h4 className="text-success-green font-semibold mb-2">Solution</h4>
                <p className="text-text-secondary text-sm leading-relaxed">
                  Agents sp√©cialis√©s en s√©curit√© travaillant en collaboration
                </p>
              </div>
              
              <div className="text-center p-4">
                <div className="w-12 h-12 bg-primary-blue/20 rounded-full flex items-center justify-center mx-auto mb-3">
                  <CheckCircle className="w-6 h-6 text-primary-blue" />
                </div>
                <h4 className="text-primary-blue font-semibold mb-2">R√©sultat</h4>
                <p className="text-text-secondary text-sm leading-relaxed">
                  Code s√©curis√© valid√© et pr√™t pour la production
                </p>
              </div>
            </div>
          </div>
        </motion.div>

        {/* Agent Cycle Flow */}
        <motion.div
          className="mb-16"
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          transition={{ duration: 1, delay: 0.4 }}
          viewport={{ once: true }}
        >
          <h3 className="text-2xl font-bold text-text-primary text-center mb-12">
            üîÑ Cycle Constant d'Agents Collaboratifs
          </h3>
          
          {/* Circular Flow Visualization */}
          <div className="relative">
            {/* Top Flow Line - First to Last Card */}
            <div className="absolute -top-8 left-0 right-0 z-10 hidden lg:block">
              <div className="relative h-2">
                <div className="absolute top-1/2 transform -translate-y-1/2 left-[10%] right-[10%] h-1 bg-gradient-to-r from-primary-blue to-accent-red rounded-full"></div>
              </div>
            </div>

            {/* Bottom Flow Line - Last to First Card */}
            <div className="absolute -bottom-8 left-0 right-0 z-10 hidden lg:block">
              <div className="relative h-2">
                <div className="absolute top-1/2 transform -translate-y-1/2 left-[10%] right-[10%] h-1 bg-gradient-to-l from-primary-blue to-accent-red rounded-full"></div>
              </div>
            </div>

            {/* Agent Cards in Circle */}
            <div className="grid grid-cols-1 lg:grid-cols-5 gap-8 lg:gap-4">
              {agentCycle.map((agent, index) => (
                <motion.div
                  key={agent.phase}
                  className="group relative"
                  initial={{ opacity: 0, scale: 0.8 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ delay: index * 0.2 }}
                  viewport={{ once: true }}
                  whileHover={{ scale: 1.05 }}
                >
                  <div className={`bg-${agent.bgColor} border-2 border-${agent.borderColor} rounded-2xl p-6 h-[480px] flex flex-col justify-between hover:border-${agent.borderColor.replace('/30', '/50')} transition-all duration-300`}>
                    {/* Agent Header */}
                    <div className="text-center mb-4">
                      <h4 className={`text-lg font-bold ${agent.color} mb-1`}>
                        {agent.agent}
                      </h4>
                      <p className={`${agent.phase === 'D√©veloppement' ? 'text-gray-700' : 'text-text-light'} text-sm mb-2`}>
                        {agent.description}
                      </p>
                      <div className={`inline-block bg-${agent.bgColor} border border-${agent.borderColor} rounded-full px-3 py-1`}>
                        <span className={`${agent.color} text-xs font-medium`}>
                          {agent.phase}
                        </span>
                      </div>
                    </div>

                    {/* Actions */}
                    <div className="space-y-3 mb-4 flex-grow">
                      <h5 className={`${agent.phase === 'D√©veloppement' ? 'text-gray-900' : 'text-text-light'} font-semibold text-sm mb-2`}>Actions :</h5>
                      {agent.actions.map((action, aIndex) => (
                        <div key={aIndex} className="flex items-start gap-2">
                          <div className={`w-2 h-2 ${agent.color.replace('text-', 'bg-')} rounded-full mt-2 flex-shrink-0`}></div>
                          <span className={`${agent.phase === 'D√©veloppement' ? 'text-gray-800' : 'text-text-light'} text-xs leading-relaxed`}>
                            {action}
                          </span>
                        </div>
                      ))}
                    </div>

                    {/* Concerns */}
                    <div className="space-y-2">
                      <h5 className={`${agent.phase === 'D√©veloppement' ? 'text-gray-900' : 'text-text-light'} font-semibold text-sm mb-2`}>D√©tecte :</h5>
                      {agent.concerns.map((concern, cIndex) => (
                        <div key={cIndex} className="flex items-start gap-2">
                          <div className={`w-2 h-2 ${agent.color.replace('text-', 'bg-')} rounded-full mt-2 flex-shrink-0`}></div>
                          <span className={`${agent.color} text-xs leading-relaxed`}>
                            {concern}
                          </span>
                        </div>
                      ))}
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </motion.div>
      </div>
    </section>
  );
};

export default TechnicalCaseStudies;